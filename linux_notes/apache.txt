Apache
___________________________________________________

yum groupinstall "web server"
chkconfig httpd on
apachectl start

apachectl graceful  (restart or start httpd,  current open connections are not aborted)
/etc/init.d/httpd reload  (functionally equivalent to apachectl graceful)
apachectl graceful-stop  (stops httpd, current open connections are not aborted)
kill -TERM `cat /var/run/httpd/httpd.pid`  (if apachectl stop isn’t working)

/etc/httpd/conf/httpd.conf:
DocumentRoot  (specifies location of web pages)
DirectoryIndex (specifies the filename of the web page)
ServerRoot  (base location of configuration and logs)
LogFormat  (specifies the log format)

/etc/httpd/conf.d/welcome.conf  (refers to /var/www/error/noindex.html)
/etc/httpd/conf.d/ssl.conf  (Apache ssl config file)

Log directories, these are hardlinked:
/etc/httpd/logs/
/var/log/httpd/

Deploy a simple CGI script:
Check that the following directive exist in httpd.conf:
LoadModule cgi_module modules/mod_cgi.so
ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
Uncomment the AddHandler line and add the script’s file extension as follows.
AddHandler cgi-script .cgi .py
Here is a simple three line python script:
#!/usr/bin/python
print "Content-type: text/html\n\n"
print "Hello, World. -python"
chmod -c 755 /var/www/cgi-bin/hello.py
ls -Z /var/www/cgi-bin/hello.py  (should contain httpd_sys_script_exec_t)
<web-server>/cgi-bin/hello.py  (url for the script)
<web-server>/manual/howto/cgi.html  (apache cgi documentation)

curl -I www.redhat.com  (just the header)

GET request - status codes and locations:
curl -svL redhat.com 2>&1 | egrep '^< HTTP|^< Location'

GET request - status codes and locations:
printf "GET / HTTP/1.1\r\nHOST: localhost\r\nConnection: Close\r\nUser-Agent: netcat\r\n\r\n" | nc redhat.com 80 | egrep 'HTTP|Location'

HEAD request - status codes and locations:
curl -sIL redhat.com | egrep 'HTTP|Location'

HEAD request - status codes and locations:
printf "HEAD / HTTP/1.1\r\nHOST: localhost\r\nConnection: Close\r\nUser-Agent: netcat\r\n\r\n" | nc redhat.com 80 | egrep 'HTTP|Location'

Getting a URL that requires a username and password:
curl -u 'admin:p@55W0rd' server1:8080/solr/admin/health
curl -H ‘Authorization: Basic YWRtaW46cEA1NVcwcmQ=’ server1:8080/solr/admin/health

Getting a URL that requires a username and password:
printf "GET /solr/admin/health HTTP/1.1\r\nAuthorization: Basic YWRtaW46cEA1NVcwcmQ=\r\nHOST: localhost\r\nConnection: Close\r\nUser-Agent: netcat\r\n\r\n" | nc server1 8080

Connect to a specific node:
curl -H 'HOST: ordersummary-dev.esri.com' server1.domain.com:7775

Allow insecure server connections when using SSL:
curl -k https://fake.fakeapp-0be7676-6.zpc-sandbox.zebra.com/fake/

Find the expiration date, etc of a cert:
openssl x509 -text -noout -in wildcard.domain.net.crt

Get the intermediate cert, example:
openssl x509 -text -noout -in wildcard.domain.net.crt | grep "CA Issuers"
wget http://SVRSecure-G3-aia.verisign.com/SVRSecureG3.cer
openssl x509 -inform DER -outform PEM -in SVRSecureG3.cer -out verisign_g3.crt

Encrypt/decrypt a password with a key:
echo "p@sswd123" > passwd.txt
echo "redgreenblue" | base64 > key.txt
openssl enc -base64 -bf -in passwd.txt -out passwd_encrypted.txt -kfile key.txt
openssl enc -base64 -bf -d -in passwd_encrypted.txt -kfile key.txt → p@sswd123

List memcached stats on memcached server:
echo stats | nc server1 11211
