Five Layer Network Model:
5. Application
4. Transport (TCP/UDP)
3. Network (IP, ICMP)
2. Link (MAC address)
1. Physical

Seven-Layer OSI Model:
7. Application
6. Presentation: adds data conversion, encryption, & compression
5. Session: adds the concept of sessions so that reply and request streams are viewed as a single session of communication between client and server.
4. Transport: TCP/UDP.  TCP uses segments for correct order, adds error checking and ports allowing different streams of communication.
3. Network: IP, ICMP
2. Data Link: hosts on the same network can communicate by MAC address.
1. Physical

0.0.0.0 - represents all IP addresses
255.255.255.255 - IP address used to broadcast to all IP addresses
169.254.0.1 - 169.254.255.254 - A range of IP addresses which a device can auto configure if DHCP fails

Reserved private IPv4 network ranges, cannot be used on the Internet:
Class A: 10.0.0.0 - 10.255.255.255
Class B: 172.16.0.0 - 172.31.255.255
Class C: 192.168.0.0 - 192.168.255.255

Subnetting

Subnet 10.0.0.0/16 has:
Address range: 10.0.0.0 - 10.0.255.255

Divided into two subnets:
Subnets 10.0.0.0/17 and 10.0.128.0/17 have:
Addresses (10.0.0.0 - 10.0.63.255) and (10.0.64.0 - 10.0.255.255)

Divided again:
Subnets (10.0.0.0/18 and 10.0.64.0/18) and (10.0.128.0/18 and 10.0.192.0/18)
Addresses (10.0.0.0 - 10.0.31.255) and (10.0.32.0 - 10.0.63.255)...

Local communication on a private subnet:
Devices send ARP requests by IP address for MAC addresses on a local network.
Devices reply with MAC address.
Packets are encapsulated inside frames and sent between devices.  Frames are added and removed along the route.

Ports and Sockets

A socket is an endpoint of a bidirectional communication that occurs in a computer network that is based on the Internet protocol, 
whereas a port is a logical data connection that can be used to exchange data without the use of a temporary file or storage.
A socket is associated with a port and there can be multiple sockets associated with a port.

A Unix domain socket or IPC socket (inter-process communication socket) is a data communications endpoint...
for exchanging data between processes executing within the same host operating system.
